(function (d3$1) {
  'use strict';

  const dataKey = ['title', 'nickname', 'parentInfo', 'out', 'special', 'protectLevel', 'characteristic', 'living', 'hab', 'hab2', 'low', 'high', 'location'];


  const render = (data,svg) => {
  	
    var connections, rects, names;
    var id = 'All Creatures';
    
    const buildTree = (partition) => {
    	
      d3$1.select('#mouseEvent').remove();

      var targetId = data.find(d => d.child == id);
      var targetData = data.filter(d => (d.child == id) || (d.parent == id));
    	var n = targetData.length; 
      
      
      var end = d3$1.min([(partition+1)*10-1, n-1]); 
      var tmp = targetData.slice(partition*10, end);
      tmp.push(targetData[n-1]);
      targetData = tmp;
      
      //next button if child node exceed 9
      if (end != n-1){

        var x = 800;
        var y = 280;
        var nextButtonG = svg.append('g');
       	
        nextButtonG.append('rect')
        					.attr('x', x)
          				.attr('y', y)
        					.attr('height', 40)
        					.attr('width', 105)
        					.attr('fill', 'none')
        					.attr('stroke', 'black')
        					.attr('class', 'next-button');
     	
        nextButtonG.append('text')
        					.attr('x', x+6)
        					.attr('y', y+10)
        					.text('Next Page')
        					.attr('stroke', 'black')
        					.attr('class', 'next-button')
        					.attr('font-size', 20)
        					.attr('dominant-baseline', 'hanging');
        
        nextButtonG.selectAll('.next-button')
  								.on('click', datum => {
        					
          				svg.selectAll('g').remove();
        					partition = partition +1;
        					var target = data.find(d => d.child == id);
        					var tmp = target.parent;
          				target.parent = '';
          				buildTree(partition);
          				target.parent = tmp; 

        	});
      }
      
      //previous button
      if (partition >= 1){

        var x = 10;
        var y = 280;
        var prevButtonG = svg.append('g');
       	
        prevButtonG.append('rect')
        					.attr('x', x)
          				.attr('y', y)
        					.attr('height', 40)
        					.attr('width', 144)
        					.attr('fill', 'none')
        					.attr('stroke', 'black')
        					.attr('class', 'prev-button');
     	
        prevButtonG.append('text')
        					.attr('x', x+7)
        					.attr('y', y+9)
        					.text('Previous Page')
        					.attr('stroke', 'black')
        					.attr('class', 'prev-button')
        					.attr('font-size', 20)
        					.attr('dominant-baseline', 'hanging');
        
        prevButtonG.selectAll('.prev-button')
  								.on('click', datum => {
          
          				svg.selectAll('g').remove();
        					partition = partition -1;
        					var target = data.find(d => d.child == id);
        					var tmp = target.parent;
          				target.parent = '';
          				buildTree(partition);
          				target.parent = tmp; 

        	});
      }
      
      if (targetId.last == 1){
        
      	//print the introduction of creatures
        var textArea = svg.append('g');
        var line = 0;
        var slice = 0;
        console.log(targetId);
        for(var i = 0; i < dataKey.length; i++){
          
        	  
          	var key = dataKey[i];
          	var content = targetId[key];
          
          	if (key == 'title'){
            	textArea.append('text')
        				.attr('x', 50)
        				.attr('y', 60 + line*20).text(content.slice(slice*50, content.length))
              	.attr('font-size', 20)
              	.attr('font-weight', 'bold');
              line = line+1.5;
            }
          	else if(content != ''){
        
              if(content.length > 50*(slice+1)){
              	textArea.append('text')
        				.attr('x', 50)
        				.attr('y', 60 + line*20).text(content.slice(slice*50, (slice+1)*50 ));
                slice = slice+1;
                i = i-1;
                }
  						
            else {
              	textArea.append('text')
        				.attr('x', 50)
        				.attr('y', 60 + line*20).text(content.slice(slice*50, content.length));
                slice = 0;
              }
        			
              line = line +1;
            }
        }

      }
      
      
    	var dataStructure = d3.stratify()
      											.id(d => d.child)
      											.parentId(d => d.parent)
      											(targetData);
    
      var treeStructure = d3.tree().size([900,200]);
  		var information = treeStructure(dataStructure);
      var targetNode = information.descendants();
      var targetLink = information.links();
      
      console.log(targetLink);
      //Create Graph - Links

      connections = svg.append('g').selectAll('path')
      										.data(targetLink);
      connections.enter().append('path')//join('path')
      					.attr('d', d => 'M' + d.source.x + ',' + (d.source.y+20) + ' v 80 H' + d.target.x + ' V' + (d.target.y-20))
      					.attr('fill', 'none')
      					.attr('stroke', 'rosybrown')
      					.attr('stroke-width', 2);
          
      
      //Create Graph - Nodes
      rects = svg.append('g').selectAll('rect')
      							.data(targetNode);
      console.log(targetNode);
      rects.enter().append('rect')//join('rect')
      		.attr('x', d => d.x-48)
      		.attr('y', d => d.y-20)
      		.attr('height', 40) 
      		.attr('width', 96)
      		.attr('fill', 'red')
      		.attr('stroke', 'rosybrown')
      		.attr('stroke-width', 2)
      		.attr('class', 'nodes')
      		.attr('fill-opacity', d => d.data.protect)
      		.attr('stroke-opacity', 1) ;	

      
      //Create Name Tags
      names = svg.append('g').selectAll('text')
      							.data(targetNode);
      names.enter().append('text')//join('text')
      		.text(d => d.data.child)
      		.attr('x', d => d.x)
      		.attr('y', d => d.y)
      		.attr('text-anchor', 'middle')
      		.attr('dominant-baseline', 'middle')
      		.attr('class', 'nodes');

    	svg.selectAll('.nodes')
      	.on('mouseover', d => {
      		svg.append('rect')
        		.attr('id', 'mouseEvent')
        		.attr('x', d.x-50)
      			.attr('y', d.y-22)
        		.attr('height', 44)
        		.attr('width', 98)
        		.attr('stroke', '#3498DB')
      			.attr('stroke-width', 3)
        		.attr('fill', 'none');
      })
      	.on('mouseout' , d => {
      		d3$1.select('#mouseEvent').remove();
      })
    		.on('click', (datum) => {
        	
        	partition = 0;
  				var click = data.find(d => d.child == datum.data.child);
        	//click children -> next
        	if (datum.data.parent == id){
            console.log('next');
  					var target = click;
          }
        	
         //click parent -> back
        	else {
          	console.log('back');
            var target = data.find(d => d.child == click.parent);
          }
          
  				id = target.child;
        	svg.selectAll('g').remove();
        	svg.selectAll('text').remove();
        	
      
        	var tmp = target.parent;
          target.parent = '';
          buildTree(partition);
          target.parent = tmp; 
        	
    	});
      
      //page tag
      svg.append('g').append('text')
      	.text('Page ' + +(partition+1))
      	.attr('x', 456)
      	.attr('y', 410)
      	.attr('text-anchor', 'middle')
      	.attr('dominant-baseline', 'middle');
      
      if (targetId.last == 0){
      	var icon = svg.append('g');
      	icon.append('text')
      		.text('保育等級：')
      		.attr('x', -8)
      		.attr('y', -15)
      		.attr('class', 'icon');
      	for(var i=0;i<4;i++){
      		icon.append('circle')
      			.attr('cx', 0)
      			.attr('cy', 0+20*i)
      			.attr('r', 8)
  					.attr('fill-opacity', 0.2*i)
      			.attr('fill', 'red')
        		.attr('stroke', '#635F5D')
        		.attr('class', 'icon');
        	icon.append('text')
        		.text(' Level ' + i)
        		.attr('x', 10)
        		.attr('y', 8+20*i)
        		.attr('color', '#635F5D')
        		.attr('class', 'icon');
      	}
      }
      var titleword = svg.append('g');
      var divv = d3.select("body").append("div")	
      					   .attr("class", "tooltip2")				
      					   .style("opacity", 0);
      
    	titleword.append('text')
      		.text('國家公園物種知識庫')
       		.attr('x', 550)
      		.attr('y', 410)
  	  		.attr("font-family", "DFKai-SB")
      		.attr("font-size", "35px")
          .on("mouseover", function(d) { 
      				d3.select(this).style("fill","#4169e1");
              divv.transition()		
                     .duration(200)		
                     .style("opacity", .9);		
              divv.html("回到首頁")
                  .style("left", (d3.event.pageX) + "px")		
                  .style("top", (d3.event.pageY - 28) + "px");	
  							
  			}).on("mouseleave", function(d) {
              d3.select(this).style("fill", "#000000");
              divv.transition()		
                  .duration(100)		
                  .style("opacity", 0);	
        }).on('click', function(d){
  						history.go(0);
      	});
   
       
    };
    
    buildTree(0);
    
  };

  var location = '';
  var timeoutID = window.setTimeout( () => {
    					var svg = d3$1.select('svg')
  							.append('g').attr('transform', 'translate(50,50)');
        			var divv = d3.select("body").append("div")	
      					.attr("class", "tooltip")				
      					.style("opacity", 0);
    
              var titleword = svg.append('g');
              titleword.append('text')
                  .text('國家公園物種知識庫')
                  .attr('x', 550)
                  .attr('y', 410)
                  .attr("font-family", "DFKai-SB")
                  .attr("font-size", "35px");		
    
  						d3$1.select('svg').selectAll('circle')
                .on("mouseover", function(d,i) { 
      						d3.select(this).style("fill","#000000");
                  divv.transition()		
                     .duration(200)		
                     .style("opacity", .9);		
                	divv.html(d.code)
                     .style("left", (d3.event.pageX) + "px")		
                  	 .style("top", (d3.event.pageY - 28) + "px");	
  							})
                .on("mouseleave", function(d) {
                 	d3.select(this).style("fill", "red");
                  divv.transition()		
                     .duration(100)		
                     .style("opacity", 0);	

                })
    						.on('click', datum => {
                	divv.transition()		
                     .duration(100)		
                     .style("opacity", 0);	
              		location = datum.code;
              		d3$1.csv('https://raw.githubusercontent.com/oao519p/Data-Visualization-Final/main/data-4.csv').then( (data) => {
   									
                    console.log(location);
                    data = data.filter(d => d[location] == 1);
                    data.forEach(d => {
      								d.last = +d.last;
        							d.protect = +d.protect*0.2;
      							});
  									console.log(data);
                  	d3$1.select('svg').selectAll('circle').remove();
                  	d3$1.select('svg').selectAll('path').remove();
                    d3$1.select('body').style('background', '#E1EFF9');
    								render(data,svg);
  								});
            	});
  					}, 1000);

}(d3));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,
